using System.Collections.Generic;using UnityEngine;static class YieldCache{class FloatComparer:IEqualityComparer<float>{bool IEqualityComparer<float>.Equals(float x,float y){return x == y;}int IEqualityComparer<float>.GetHashCode(float o){return o.GetHashCode();}}public static readonly WaitForEndOfFrame WaitForEndOfFrame=new WaitForEndOfFrame();public static readonly WaitForFixedUpdate WaitForFixedUpdate=new WaitForFixedUpdate();private static readonly Dictionary<float,WaitForSeconds>t=new Dictionary<float,WaitForSeconds>(new FloatComparer());private static readonly Dictionary<float,WaitForSecondsRealtime>r=new Dictionary<float,WaitForSecondsRealtime>(new FloatComparer());public static WaitForSeconds WaitForSeconds(float s){WaitForSeconds w;if(!t.TryGetValue(s,out w))t.Add(s,w=new WaitForSeconds(s));return w;}public static WaitForSecondsRealtime WaitForSecondsRealTime(float s){WaitForSecondsRealtime w;if(!r.TryGetValue(s,out w))r.Add(s,w=new WaitForSecondsRealtime(s));return w;}}